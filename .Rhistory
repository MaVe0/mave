require(blogdown) # load blogdown
install_hugo() # install Hugo framework
new_site(theme = "panr/hugo-theme-terminal")
blogdown::serve_site()
blogdown::serve_site()
shiny::runApp('C:/mave/shiny_apps/covid_cases_by_continent')
runApp('C:/mave/shiny_apps/covid_cases_by_continent')
library(shiny)
library(shinythemes)
library(tidyverse)
library(Cairo)
library(tibbletime)
library(lubridate)
rm <- rollify(mean, window = 7)
data <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv",
na.strings = "",
fileEncoding = "UTF-8-BOM") %>%
rename(date = dateRep, cnt = countriesAndTerritories, pop = popData2019) %>%
mutate(date = lubridate::dmy(date),
relcases = cases/pop*100000) %>%
arrange(cnt, date) %>%
group_by(cnt) %>%
mutate(relcases_7 = rm(relcases),
cumcases = cumsum(cases),
cumdeaths = cumsum(deaths),
mortality = cumdeaths/cumcases)
data <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv",
na.strings = "",
fileEncoding = "UTF-8-BOM") %>%
rename(date = dateRep, cnt = countriesAndTerritories, pop = popData2019) %>%
mutate(date = lubridate::dmy(date),
relcases = cases/pop*100000) %>%
arrange(cnt, date) %>%
group_by(cnt)
View(data)
data <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv",
na.strings = "",
fileEncoding = "UTF-8-BOM") %>%
rename(date = dateRep, cnt = countriesAndTerritories, pop = popData2019) %>%
mutate(date = lubridate::dmy(date),
relcases = cases/pop*100000) %>%
arrange(cnt, date) %>%
count(cnt, name = n) %>%
group_by(cnt) %>%
mutate(relcases_7 = rm(relcases),
cumcases = cumsum(cases),
cumdeaths = cumsum(deaths),
mortality = cumdeaths/cumcases)
data <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv",
na.strings = "",
fileEncoding = "UTF-8-BOM") %>%
rename(date = dateRep, cnt = countriesAndTerritories, pop = popData2019) %>%
mutate(date = lubridate::dmy(date),
relcases = cases/pop*100000) %>%
arrange(cnt, date) %>%
count(cnt, name = "n") %>%
group_by(cnt) %>%
mutate(relcases_7 = rm(relcases),
cumcases = cumsum(cases),
cumdeaths = cumsum(deaths),
mortality = cumdeaths/cumcases)
data <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv",
na.strings = "",
fileEncoding = "UTF-8-BOM") %>%
rename(date = dateRep, cnt = countriesAndTerritories, pop = popData2019) %>%
mutate(date = lubridate::dmy(date),
relcases = cases/pop*100000) %>%
arrange(cnt, date) %>%
count(cnt, name = "n")
data <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv",
na.strings = "",
fileEncoding = "UTF-8-BOM") %>%
rename(date = dateRep, cnt = countriesAndTerritories, pop = popData2019) %>%
mutate(date = lubridate::dmy(date),
relcases = cases/pop*100000) %>%
arrange(cnt, date) %>%
add_count(cnt, name = "n")
data <- read.csv("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv",
na.strings = "",
fileEncoding = "UTF-8-BOM") %>%
rename(date = dateRep, cnt = countriesAndTerritories, pop = popData2019) %>%
mutate(date = lubridate::dmy(date),
relcases = cases/pop*100000) %>%
arrange(cnt, date) %>%
add_count(cnt, name = "n") %>%
filter(n >= 7) %>%
group_by(cnt) %>%
mutate(relcases_7 = rm(relcases),
cumcases = cumsum(cases),
cumdeaths = cumsum(deaths),
mortality = cumdeaths/cumcases)
runApp('C:/mave/shiny_apps/covid_cases_by_continent')
